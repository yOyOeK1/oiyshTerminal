{"id": "d42e4dfde145ec63", "label": "hhbell-binary", "disabled": false, "info": "", "env": [], "nodes": [{"id": "a43a378918df5402", "type": "inject", "z": "d42e4dfde145ec63", "name": "Full houre bell", "props": [{"p": "payload"}, {"p": "topic", "vt": "str"}], "repeat": "", "crontab": "0 0-23 * * *", "once": false, "onceDelay": 0.1, "topic": "", "payloadType": "date", "x": 520, "y": 340, "wires": [["7f4830bea9c556f6"]]}, {"id": "7f4830bea9c556f6", "type": "function", "z": "d42e4dfde145ec63", "name": "houre to binary", "func": "function dec2bin(dec) {\n  return (dec >>> 0).toString(2);\n}\n\nconst d = new Date();\nvar hour = d.getHours();\nvar hBin = dec2bin( hour );\n\nnode.status({\n    fill:'blue',\n    shape: 'ring',\n    text:\"houre: \"+hour+\" (\"+hBin+\")\"\n});\n\nfunction sendChar( tr, charNo, delay){\n    let path = '/data/data/com.termux/files/home/.otdm/nrf-hhbell-binary/';\n    try{\n        setTimeout(\n            function(){ node.send({\n                payload: tr.charAt(charNo),\n                mp3: path+\"bell\"+tr.charAt(charNo)+\".mp3\"\n                }) \n            },\n            delay\n            );\n    }catch(e){}\n    \n}\nfor(var c=(hBin.length-1);c>=0;c--){\n    sendChar( hBin, c, (hBin.length-c)*2000);\n}\n", "outputs": 1, "noerr": 0, "initialize": "", "finalize": "", "libs": [], "x": 800, "y": 340, "wires": [["b11858fd697c0a8c", "d38bb6e648b32de5"]]}, {"id": "b11858fd697c0a8c", "type": "debug", "z": "d42e4dfde145ec63", "name": "", "active": false, "tosidebar": true, "console": false, "tostatus": false, "complete": "true", "targetType": "full", "statusVal": "", "statusType": "auto", "x": 1010, "y": 440, "wires": []}, {"id": "d38bb6e648b32de5", "type": "link out", "z": "d42e4dfde145ec63", "name": "send to audio processor", "mode": "link", "links": ["ce6ae63daecb7b69"], "x": 975, "y": 240}]}